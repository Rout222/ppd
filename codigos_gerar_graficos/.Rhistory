}
vagalumes_numero    <- 3
vagalumes_dimencoes <- 2
vagalumes_iteracoes <- 10
angulo_maximo       <- 90
angulo_eta          <- 0.10
limite_superior <- 5
limite_inferior <- -5
funcao_fitness <- f.rastrigin
#plotagem dos gráficos
plotagem <- TRUE
vagalumes <- matrix(
runif(vagalumes_numero*vagalumes_dimencoes, limite_inferior, limite_superior),
vagalumes_numero,
vagalumes_dimencoes
)
fitness <- f.fit(vagalumes)
vagalume_melhor_indice <- NA
vagalume_melhor        <- NA
vagalume_melhor_fitness<- NA
seta_melhor_vagalume(fitness)
seta_melhor_vagalume <- function(x){
vagalume_melhor_indice <<- which(x == min(x))
q
Q
source('E:/escola/R/vagalume.R')
debugSource('E:/escola/R/vagalume.R')
vagalume_melhor_indice
debugSource('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
fitness
vagalume_melhor_indice
vagalume_melhor
source('E:/escola/R/vagalume.R')
vagalume_melhor_indice
vagalume_melhor
vagalume_melhor_fitness
sample
sample(4)
sample(1,100)
sample(100,1)
sample(vagalumes_dimencoes, 1)
sample(vagalumes_dimencoes, 1)
sample(vagalumes_dimencoes, 1)
sample(vagalumes_dimencoes, 1)
sample(vagalumes_dimencoes, 1)
sample(100,1)
sample(vagalumes_dimencoes, 1)
sample(100,1)
sample(vagalumes_dimencoes, 1)
sample(100,1)
sample(vagalumes_dimencoes, 1)
sample(100,1)
sample(vagalumes_dimencoes, 1)
sample(vagalumes_dimencoes, 1)
sample(vagalumes_dimencoes, 1)
sample(vagalumes_dimencoes, 1)
sample(vagalumes_dimencoes, 1)
source('E:/escola/R/vagalume.R')
sample(100,1)
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
which(vagalumes == meelhor_vagalume)
which(vagalumes == melhor_vagalume)
which(vagalumes == vagalume_melhor)
which(fitness=vagalume_melhor_fitness)
which(fitness==vagalume_melhor_fitness)
fitness
vagalume_melhor_fitness
which(which(fitness==vagalume_melhor_fitness) == 1)
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
if (plotagem == TRUE)
{
#plotando a funcoes
x <- seq(limite_inferior,limite_superior,0.6)
y <- x
z <- matrix(NA, length(x), length(y))
for (i in 1:length(x))
{
for (j in 1:length(y))
{
z[i,j] <- funcao_fitness(c(x[i],y[j]))
}
}
persp3D(x,y,z,theta=45,phi=30)
contour(x,y,z)
par(new=T)
#plotando as particulas
plot(vagalumes,
xlim=c(limite_inferior,limite_superior),
ylim=c(limite_inferior,limite_superior),
pch=20,
xlab="", ylab="", col="blue", xaxt='n', yaxt='n')
}
source('E:/escola/R/vagalume.R')
debugSource('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
#plotando as particulas
plot(vagalumes,
xlim=c(limite_inferior,limite_superior),
ylim=c(limite_inferior,limite_superior),
pch=20,
xlab="", ylab="", col="blue", xaxt='n', yaxt='n')
contour(x,y,z)
par(new=T)
plot(novos,
xlim=c(limite_inferior,limite_superior),
ylim=c(limite_inferior,limite_superior),
pch=20,
xlab="", ylab="", col="red", xaxt='n', yaxt='n')
novos
espelha(vagalumes)
print(espelha(vagalumes))
source('E:/escola/R/vagalume.R')
print(novos)
debugSource('E:/escola/R/vagalume.R')
dimensao_base
1!=2
1!=1
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
novos
source('E:/escola/R/vagalume.R')
novos
source('E:/escola/R/vagalume.R')
novos
vagalumes
fitness
source('E:/escola/R/vagalume.R')
vagalumes
novos
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
vagalume_melhor_fitness
source('E:/escola/R/vagalume.R')
vagalume_melhor_fitness
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/Downloads/2018424_13857_aulapso/aulapso/pso.R')
source('E:/Downloads/2018424_13857_aulapso/aulapso/pso.R')
source('E:/Downloads/2018424_13857_aulapso/aulapso/pso.R')
source('E:/Downloads/2018424_13857_aulapso/aulapso/pso.R')
source('E:/escola/R/vagalume.R')
source('E:/Downloads/2018424_13857_aulapso/aulapso/pso.R')
source('E:/escola/R/vagalume.R')
source('E:/Downloads/2018424_13857_aulapso/aulapso/pso.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/Downloads/2018424_13857_aulapso/aulapso/pso.R')
source('E:/Downloads/2018424_13857_aulapso/aulapso/pso.R')
source('E:/Downloads/2018424_13857_aulapso/aulapso/pso.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
source('E:/escola/R/vagalume.R')
setwd("E:/escola/ppd/trabalho/codigos_gerar_graficos")
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
fread
read.table("output_serial.csv")
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
serial
as.double(serial)
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
serial
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
matplot
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
dados
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
ggplot(data = dados, aes(x=x, y=y)) + geom_line(aes(colour=1:2))
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
serial
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
plot(x = )
1:359
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
length(serial)
length(serial´1)
length(serial[])
length(serial[1])
length(serial)
length(data.frame(serial))
serial
serial$V1
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
g <- ggplot(dados, aes(serial, 1:length(serial)))
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
g + geom_jitter(aes(col=serial, size=1))
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
g + geom_jitter(aes(col=serial, size=1))
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
g + geom_jitter(aes(col=serial, size=1)) + geom_smooth(aes(col=serial), method="lm", se=F)
g + geom_jitter(aes(col=serial, size=1)) + geom_smooth(aes(col=serial), method="lm", se=F) + geom_jitter(aes(col=paralelo, size=1))
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
g + geom_jitter(aes(col=serial, size=1)) + geom_smooth(aes(col=serial), method="lm", se=F)
g  + geom_smooth(aes(col=serial), method="lm", se=F)
g + geom_jitter(aes(col=serial, size=1)) + geom_smooth(aes(col=serial), method="lm", se=F)
g + geom_jitter(aes(col=paralelo, size=1)) + geom_smooth(aes(col=paralelo), method="lm", se=F)
g + geom_point() + geom_smooth(aes(col=paralelo), method="lm", se=F)
g + geom_jitter(aes(col=paralelo, size=0.5)) + geom_smooth(aes(col=serial), method="lm", se=F)
g + geom_jitter(aes(col=paralelo-serial, size=0.5)) + geom_smooth(aes(col=serial), method="lm", se=F)
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
g + geom_count(col="tomato3", show.legend=F) + geom_smooth(aes(col=serial), method="lm", se=F)
g <- ggplot(dados, aes(1:length(serial), paralelo))+
geom_count() +
geom_smooth(method="lm", se=F)
g
g + geom_jitter(aes(col=paralelo, size=0.5)) + geom_smooth(aes(col=serial), method="lm", se=F)
g <- ggplot(dados, aes(1:length(serial), paralelo))
g + geom_jitter(aes(col=paralelo, size=0.5)) + geom_smooth(aes(col=serial), method="lm", se=F)
g + geom_jitter(aes(col=paralelo, size=0.5)) + geom_smooth(aes(col=1), method="lm", se=F)
g <- ggplot(dados, aes(1:length(serial), paralelo))
g + geom_jitter(aes(col=paralelo, size=0.5)) + geom_smooth(aes(col=1), method="lm", se=F)
ggMarginal(g, type = "histogram", fill="transparent")
ggMarginal(g, type = "boxplot", fill="transparent")
ggMarginal(g, type = "histogram", fill="transparent")
ggMarginal(g, type = "boxplot", fill="transparent")
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
install.packages(ggExtra)
install.packages("ggExtra")
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
g <- ggplot(dados, aes(1:length(serial), paralelo))
g + geom_jitter(aes(col=paralelo, size=0.5)) + geom_smooth(aes(col=1), method="lm", se=F)
ggMarginal(g, type = "histogram", fill="transparent")
g <- ggplot(dados$serial, aes(1:length(serial), paralelo))
g <- ggplot(dados, aes(1:length(serial), paralelo))
g + geom_jitter(aes(col=paralelo, size=0.5)) + geom_smooth(aes(col=1), method="lm", se=F)
ggMarginal(g, data= serial$V1, type = "histogram", fill="transparent")
ggMarginal(g, fill=1, type = "histogram", fill="transparent")
ggMarginal(g, data=dados, type = "histogram", fill="transparent")
ggMarginal(g, group=serial, type = "histogram", fill="transparent")
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
g <- ggplot(dados, aes(1:length(serial), paralelo))
ggMarginal(g, type = "histogram", fill="transparent")
colnames(dados) <- c("serial", "paralelo")
theme_set(theme_bw())
g <- ggplot(dados, aes(1:length(serial), paralelo))
g + geom_jitter(aes(col=paralelo, size=0.5)) + geom_smooth(aes(col=1), method="lm", se=F)
ggplot(serial$V1)
ggplot(serial)
plot(serial)
plot(1:359,serial)
plot(1:360,serial)
length(serial)
plot(1:359,serial$V1)
plot(1:359,serial$V1, type = "l")
plot(1:359,serial$V1, type = "l", col="blue")
lines(1:359,paralelo$V1,col="green")
library("RSNNS")
library("corrgram")
library("gridExtra")
library("ggplot2")
library("gtable")
library(ggExtra)
#limpar tela
rm(list=ls())
cat('\014')
if(length(dev.list()) != 0){
dev.off()
}
serial <- read.table(
"output.csv",
sep=",",
colClasses=c("numeric")
)
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
serial
theme_set(theme_bw())  # pre-set the bw theme.
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
g + geom_jitter(aes(col=type, size=1)) +
geom_smooth(aes(col=type), method="lm", se=F)
aux <- which(dados$action = "sum")
aux <- which(dados$action =="sum")
aux
View(dados)
print(dados$action)
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
aux
dados[aux]
dados[aux,]
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
g + geom_jitter(aes(col=type, size=1)) +
geom_smooth(aes(col=type), method="lm", se=F)
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
ggplot(dados[auxsum,], aes(x=size)) +
geom_line(aes(y=time, col=type)) +
labs(title="Time Series of Returns Percentage",
subtitle="Drawn from Long Data format",
caption="Source: Economics",
y="Returns %",
color=NULL) +  # title and caption  # change to monthly ticks and labels
scale_color_manual(labels = c("parallel", "serial"),
values = c("parallel"="#00ba38", "serial"="#f8766d")) +  # line color
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8),  # rotate x axis text
panel.grid.minor = element_blank())  # turn off minor grid
ggplot(dados[auxsum,], aes(x=size)) +
geom_line(aes(y=time, col=type)) +
labs(title="Time Series of Returns Percentage",
subtitle="Drawn from Long Data format",
caption="Source: Economics",
y="Tempo",
color=NULL) +  # title and caption  # change to monthly ticks and labels
scale_color_manual(labels = c("parallel", "serial"),
values = c("parallel"="#00ba38", "serial"="#f8766d")) +  # line color
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8),  # rotate x axis text
panel.grid.minor = element_blank())  # turn off minor grid
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
ggplot(dados[auxsum,], aes(x=size)) +
geom_line(aes(y=time, col=type)) +
labs(title="Time Series of Returns Percentage",
subtitle="Drawn from Long Data format",
caption="Source: Economics",
y="Tempo",
color=NULL) +  # title and caption  # change to monthly ticks and labels
scale_color_manual(labels = c("Paralelo", "Serial"),
values = c("parallel"="#00ba38", "serial"="#f8766d")) +  # line color
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8),  # rotate x axis text
panel.grid.minor = element_blank())  # turn off minor grid
ggplot(dados[auxsum,], aes(x=size)) +
geom_line(aes(y=time, col=type)) +
labs(title="Tamanho da matriz X tempoo gasto",
caption="Fonte: Autores",
y="Tempo",
color=NULL) +  # title and caption  # change to monthly ticks and labels
scale_color_manual(labels = c("Paralelo", "Serial"),
values = c("parallel"="#00ba38", "serial"="#f8766d")) +  # line color
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8),  # rotate x axis text
panel.grid.minor = element_blank())  # turn off minor grid
ggplot(dados[auxsum,], aes(x=size)) +
geom_line(aes(y=time, col=type)) +
labs(title="Tamanho da matriz X tempo gasto na soma",
caption="Fonte: Autores",
y="Tempo",
color=NULL) +  # title and caption  # change to monthly ticks and labels
scale_color_manual(labels = c("Paralelo", "Serial"),
values = c("parallel"="#00ba38", "serial"="#f8766d")) +  # line color
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8),  # rotate x axis text
panel.grid.minor = element_blank())  # turn off minor grid
ggplot(dados[auxsum,], aes(x=size)) +
geom_line(aes(y=time, col=type)) +
labs(title="Tamanho da matriz X Tempo gasto na soma",
caption="Fonte: Autores",
y="Tempo",
color=NULL) +  # title and caption  # change to monthly ticks and labels
scale_color_manual(labels = c("Paralelo", "Serial"),
values = c("parallel"="#00ba38", "serial"="#f8766d")) +  # line color
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8),  # rotate x axis text
panel.grid.minor = element_blank())  # turn off minor grid
ggplot(dados[auxvector,], aes(x=size)) +
geom_line(aes(y=time, col=type)) +
labs(title="Tamanho da matriz X Tempo gasto na soma",
caption="Fonte: Autores",
y="Tempo",
color=NULL) +  # title and caption  # change to monthly ticks and labels
scale_color_manual(labels = c("Paralelo", "Serial"),
values = c("parallel"="#00ba38", "serial"="#f8766d")) +  # line color
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8),  # rotate x axis text
panel.grid.minor = element_blank())  # turn off minor grid
auxvector <- which(dados$action =="vector")
ggplot(dados[auxvector,], aes(x=size)) +
geom_line(aes(y=time, col=type)) +
labs(title="Tamanho da matriz X Tempo gasto na soma",
caption="Fonte: Autores",
y="Tempo",
color=NULL) +  # title and caption  # change to monthly ticks and labels
scale_color_manual(labels = c("Paralelo", "Serial"),
values = c("parallel"="#00ba38", "serial"="#f8766d")) +  # line color
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8),  # rotate x axis text
panel.grid.minor = element_blank())  # turn off minor grid
ggplot(dados[auxvector,], aes(x=size)) +
geom_line(aes(y=time, col=type)) +
labs(title="Tamanho da matriz X Tempo gasto na criação",
caption="Fonte: Autores",
y="Tempo",
color=NULL) +  # title and caption  # change to monthly ticks and labels
scale_color_manual(labels = c("Paralelo", "Serial"),
values = c("parallel"="#00ba38", "serial"="#f8766d")) +  # line color
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8),  # rotate x axis text
panel.grid.minor = element_blank())  # turn off minor grid
ggplot(dados[auxvector,], aes(x=size)) +
geom_line(aes(y=time, col=type)) +
labs(title="Tamanho da matriz X Tempo gasto na criação",
caption="Fonte: Autores",
y="Tempo",
color=NULL) +  # title and caption  # change to monthly ticks and labels
scale_color_manual(labels = c("Paralelo", "Serial"),
values = c("parallel"="#00ba38", "serial"="#f8766d")) +  # line color
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8),  # rotate x axis text
panel.grid.minor = element_blank())+  # turn off minor grid
geom_smooth(aes(col=type), method="lm", se=F)
ggplot(dados[auxvector,], aes(x=size, y=time)) +
geom_line(aes(y=time, col=type)) +
labs(title="Tamanho da matriz X Tempo gasto na criação",
caption="Fonte: Autores",
y="Tempo",
color=NULL) +  # title and caption  # change to monthly ticks and labels
scale_color_manual(labels = c("Paralelo", "Serial"),
values = c("parallel"="#00ba38", "serial"="#f8766d")) +  # line color
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8),  # rotate x axis text
panel.grid.minor = element_blank())+  # turn off minor grid
geom_smooth(aes(col=type), method="lm", se=F)
ggplot(dados[auxsum,], aes(x=size, y=time)) +
geom_line(aes(y=time, col=type)) +
labs(title="Tamanho da matriz X Tempo gasto na criação",
caption="Fonte: Autores",
y="Tempo",
color=NULL) +  # title and caption  # change to monthly ticks and labels
scale_color_manual(labels = c("Paralelo", "Serial"),
values = c("parallel"="#00ba38", "serial"="#f8766d")) +  # line color
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8),  # rotate x axis text
panel.grid.minor = element_blank())+  # turn off minor grid
geom_smooth(aes(col=type), method="lm", se=F)
ggplot(dados[auxsum,], aes(x=size, y=time)) +
geom_line(aes(y=time, col=type)) +
labs(title="Tamanho da matriz X Tempo gasto na soma",
caption="Fonte: Autores",
y="Tempo",
color=NULL) +  # title and caption  # change to monthly ticks and labels
scale_color_manual(labels = c("Paralelo", "Serial"),
values = c("parallel"="#00ba38", "serial"="#f8766d")) +  # line color
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8),  # rotate x axis text
panel.grid.minor = element_blank())+  # turn off minor grid
geom_smooth(aes(col=type), method="lm", se=F)
ggplot(dados[auxsum,], aes(x=size, y=time)) +
geom_line(aes(y=time, col=type)) +
labs(title="Tamanho da matriz X Tempo gasto na soma",
caption="Fonte: Autores",
y="Tempo",
color=NULL) +  # title and caption  # change to monthly ticks and labels
scale_color_manual(labels = c("Paralelo", "Linear"),
values = c("parallel"="#00ba38", "serial"="#f8766d")) +  # line color
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8),  # rotate x axis text
panel.grid.minor = element_blank())+  # turn off minor grid
geom_smooth(aes(col=type), method="lm", se=F)
ggplot(dados[auxvector,], aes(x=size, y=time)) +
geom_line(aes(y=time, col=type)) +
labs(title="Tamanho da matriz X Tempo gasto na criação da matriz",
caption="Fonte: Autores",
y="Tempo",
color=NULL) +  # title and caption  # change to monthly ticks and labels
scale_color_manual(labels = c("Paralelo", "Linear"),
values = c("parallel"="#00ba38", "serial"="#f8766d")) +  # line color
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 8),  # rotate x axis text
panel.grid.minor = element_blank())+  # turn off minor grid
geom_smooth(aes(col=type), method="lm", se=F)
source('E:/escola/ppd/trabalho/codigos_gerar_graficos/gerarGraficos.R')
